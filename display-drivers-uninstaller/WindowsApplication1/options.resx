<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAAAGACoHAAAFgAAACgAAAAwAAAAYAAAAAEAGAAAAAAAgAEAAMQOAADEDgAAAAAAAAAA
        AAD/////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ///////////////////////////////////////v7u7t7Ozs7Ozs7Ozt7Ozs7Ozt7Ozs7Ozs7Ozs7Ozs
        7Ozs7Ozs7Ozs7Ozs7Ozt7Ozs7Ozs7Ozs7Ozt7Ozt7Ozs7Ozt7Ozs7Ozt7Ozs7Ozt7Ozs7Ozt7Ozt7Ozs
        7Ozs7Ozs7Ozt7Ozs7Ozs7Ozt7Ozs7Ozs7Ozt7Ozs7Ozt7Ozt7Ozt7Ozs7Ozu7e3////t7Oy1s7K1s7K1
        s7K1s7K1s7K1s7K1s7K1s7K1s7K1s7K1s7K1s7K1s7K1s7K1s7K1s7K1s7K1s7K1s7K1s7K1s7K1s7K1
        s7K1s7K1s7K1s7K1s7K1s7K1s7K1s7K1s7K1s7K1s7K1s7K1s7K1s7K1s7K1s7K1s7K1s7K1s7K1s7K1
        s7K1s7K1s7Kxr67Y19fj4eHKyMfKyMfKyMfKyMfIxsVEQ0MvLi49PDx6eHiSkJClpKMvLi5dXFxsa2ty
        cXDBv74zMzN1dHM1NTUvLi5GRkXHxcR8e3qZl5aXlpVwb27LyciGhIRZWFcvLi4vLi5WVVQvLi4vLi5T
        UlIvLi4vLi5fXl1QT0/KyMd2dXSfnp3KyMfKyMfKyMfKyMfS0dDh4ODKyMfKyMfKyMfKyMesqqojIiKE
        g4IuLi48OzuBgH9GRUUMDAw9PDxQT09XV1Zwbm4MDAxMS0tXVlaHhoUlJSSurKxlZGOKiYi9u7oIBwcN
        DQ0GBQVwb247OzqEg4Jsa2pBQECEg4JjYmJLSkmIhoaWlZQTExNYWFcjIiKioKDKyMfKyMfKyMfKyMfT
        0tHh4ODKyMfKyMfKyMfKyMempaRGRkXKyMdXVlY5ODhlZGMVFRVNTEw9PDxQT09SUVEXFxdeXl1aWVgZ
        GRkSEhIYGBi/vr1lZGOKiYjKyMc2NTWVk5IgHx+Uk5JbWlnKyMeKiYhjY2LKyMd/fX0KCgoSEhJpaGcR
        ERBMS0siIiKnpaXKyMfKyMfKyMfKyMfT0tHh4ODKyMfKyMfKyMfKyMempaRGRkXKyMdXV1Y5ODgQEBBr
        ampSUlE9PDxQT08QEBBCQUF9e3s+PT08OzuXlpVKSkmko6JMS0toZ2exr651dHMoJyddXFuUk5JbWlnK
        yMeKiYhjY2LKyMd/fX1SUVGVlJOioaAhISGYl5ZFRUSSkJDKyMfKyMfKyMfKyMfT0tHh4ODKyMfKyMfK
        yMfKyMeqqKhUU1PKyMdkY2JIR0cdHBy+vLtfXl5MS0tdXFwWFRWgn56FhINmZWQdHR0WFRUuLS1SUVEW
        FRUWFRVvbm2zsbEWFhWfnZ2amJdmZWXKyMeRj49ubW3KyMeHhYUWFRUWFRVXVlUWFhYWFRUbGhqysK/K
        yMfKyMfKyMfKyMfV1NPp6OjKyMfKyMfKyMfKyMfKyMfLyMfKyMfKyMfLycjLycjKyMfKyMfLycfKyMfL
        ycjKyMfKyMfKyMfLycjLycjKyMfKyMfLycjLycjKyMfKyMfLycjKyMfKyMfKyMfKyMfKyMfKyMfKyMfK
        yMfLycjLycjKyMfLycjLycjLycjKyMfKyMfKyMfKyMfKyMfr6ur+/v709PT09PT09PP09PT09PP09PT0
        9PP09PP09PP09PT09PT09PP09PP09PP09PP09PP09PT09PP09PT09PT09PT09PT09PT09PT09PP09PT0
        9PP09PT09PP09PT09PP09PP09PT09PT09PT09PT09PT09PT09PT09PP09PT09PP09PT09PP09PP29vX/
        ///9/f3f3d3b2tnb2dnb2dnb2dnb2dnb2dnb2dnb2dnb2dnb2dnb2dnb2dnb2dnb2dnb2dnb2dnb2dnb
        2dnb2dnb2dnb2dnb2dnb2dnb2dnb2dnb2dnb2dnb2dnb2dnb2dnb2dnb2dnb2dnb2tnb2dnb2dnb2dnb
        2dnb2tnb2dnb2tnb2tnb2tnb2tnn5uX////h4N9qaGhWVVRWVVRWVVRWVVRWVVRWVVRWVVRWVVRWVFRW
        VVRWVVRWVVRWVVRWVVRWVVRWVVRWVVRWVVRWVVRWVVRWVVRWVVRWVFRWVVRWVVRWVVRWVVRWVVRWVVRW
        VVRWVVRWVVRWVVRWVVRWVVRWVVRWVVRWVVRWVVRWVVRWVVRWVVRWVVRWVVSNiorw7+/LyskAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAxMDDl5OTKyckAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsKyvm5eXMy8sAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtLSzo
        5+fOzc0AAAA8PDxKSkpLS0tLS0tLS0tMTExNTU1OTk5OTk5OTk5EREQpKSkFBQUAAAAAAAA+Pj5fX19d
        XV1XV1dRUVFNTU1NTU1OTk5OTk5OTk5HR0cvLy8ICAgAAAAAAAAAAAADAwMzMzNRUVFPT09NTU1NTU1O
        Tk5PT09OTk5DQ0MfHx8AAAAAAAAuLi7q6unR0M8AAABYWFhxcXFxcXFxcXFycnJycnJycnJzc3Nzc3Nz
        c3N3d3d+fn5QUFACAgIAAABUVFSIiIiFhYV+fn51dXVycnJycnJzc3Nzc3Nzc3N2dnZ/f39gYGAGBgYA
        AAAAAAA1NTV+fn55eXl0dHR0dHR1dXV0dHR0dHR0dHR1dXVzc3MfHx8AAAAwLy/t7OzS0tEAAABbW1t1
        dXV0dHR0dHR0dHR1dXVzc3NycnJycnJycnJzc3N3d3d8fHwfHx8AAABOTk5/f399fX14eHhycnJycnJz
        c3NycnJycnJycnJzc3N3d3d/f38xMTEAAAAGBgZtbW13d3d0dHR2dnZ8fHx/f399fX15eXl3d3d0dHR0
        dHRYWFgBAQExMTDv7u7U09MAAABfX197e3t6enp6enp7e3t8fHx6enp3d3d3d3d3d3d0dHRzc3N1dXVD
        Q0MAAABISEh2dnZ1dXVzc3NycnJ2dnZ5eXl3d3d2dnZ3d3dzc3Nzc3N2dnZVVVUAAAAcHBxzc3NycnJ0
        dHR/f3+NjY2Tk5OPj4+IiIiEhIR7e3t0dHRwcHALCwsyMjLy8fDW1dUAAABkZGSDg4ODg4MfHx8WFhYW
        FhYVFRUVFRUVFRUnJydsbGx2dnZzc3NQUFAAAABGRkZxcXFxcXEoKCgTExMUFBQVFRUVFRUVFRUhISFi
        YmJ2dnZzc3NgYGABAQEsLCxxcXFxcXFvb28sLCwZGRkaGhoaGhoYGBg/Pz+JiYl5eXlycnIWFhYzMzP0
        8/PX19cAAABra2uPj4+Ojo4PDw8AAAAAAAAAAAAAAAAAAAAAAAA4ODiBgYF6enpZWVkAAABISEhycnJw
        cHAbGxsAAAAAAAAAAAAAAAAAAAAAAAAkJCR/f394eHhmZmYDAwM3Nzd1dXV0dHRISEgAAAAAAAAAAAAA
        AAAAAAACAgJ6enqEhIRzc3McHBw1NDT29vXZ2dkAAAB1dXWfn5+fn58REREAAAAAAAAAAAAAAAAAAAAA
        AAAiIiKVlZWLi4tnZ2cAAABQUFB7e3t0dHQcHBwAAAAAAAAAAAAAAAAAAAAAAAAODg6QkJCIiIhycnIE
        BARDQ0N+fn55eXkzMzMAAAAAAAAAAAAAAAAAAAAAAABxcXGUlJR6enoeHh41NTX4+Pja2toAAAB/f3+v
        r6+urq4SEhIAAAAAAAAAAAAAAAAAAAAAAAAaGhqoqKifn592dnYAAABbW1uHh4d6enodHR0AAAAAAAAA
        AAAAAAAAAAAAAAALCwubm5ubm5uAgIAFBQVLS0uIiIh9fX0sLCwAAAAAAAAAAAAAAAAAAAAAAAB0dHSi
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAyMTHw
        8O/T0tIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAxMTDu7e3x8PAzMzMZGRgZGRgZGRgZGBgZGBgZGBgZGBgZGBgZGBgZ
        GBgZGBgZGBgZGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgY
        GBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBcYGBcYFxcYFxcYFxdsa2v08/P9/f3t6+vo5ubo
        5uXo5uXn5uXn5uXn5eXn5eTn5eTn5eTm5eTm5eTm5OPm5OPm5OPl5OPl4+Ll4+Ll4+Lk4+Lk4uLk4uHk
        4uHj4uHj4eDj4eDj4eDj4eDi4ODi4N/i4N/i4N/i4N/i397h397h397h397h397h397h397h397g3t3g
        3t3g3t3g3t3b2tn+/v7/////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        /////v7+/v7+/v7+/v7+/v7+/v7+/v79/f39/f39/f3+/v7////7+/vMy8vKycnKycnKycnKycnKycnK
        ycnKycnKycnKycnKycnKycnKycnKycnKycnKycnKycnKycnKycnKycnKycnKycnKycnKycnKycnKycnK
        ycnKycnKycnKycnKycnKycnKycnKycnKycnKycnKycnKycnKycnKycnKycnKycnKycnKycnKycnKycn6
        +fnn5ubKyMeOjYxlZGNlZGOLiomLiommpaRnZmZlZGOIh4aHhoW7ubjKyMe/vbxlZGNlZGN0c3OIh4bK
        yMetq6qMi4rLych3dnXLycjKyMeJiIdlZGNlZGSRkI+HhoW6ubi5t7aFhIN5eHfKyMeJiIeUk5LLychr
        amplZGNlZGOFhIO0srG/vr2DgYHIxsXPzs3h4ODKyMdSUVA8OztMTEsMCwtIR0dXVlUsKytOTU0SEhJC
        QUFtbGuBgH+koqEWFhZOTU13dnUVFRVFREQnJyd/fn3LycgkJCTKyMfKyMdIR0dAQD9LSkoQEBBFRER3
        dnVubW1IR0coJyfKyMcdHR0vLy7LycgVFRVOTU1OTU1HRkZubWx3dnVAQD/KyMfT0tHh4ODKyMdSUVCb
        mpnKyMcoKCdCQUGFg4NIR0dAQD8TExNDQkEoJycdHR1QT086OjnKyMfKyMc8OztqaWkSEhK8urm0srEH
        Bwewrq3KyMdIR0enpqXKyMcgICBDQ0IQEBANDQ1mZWQoJyeko6I+Pj0oJye5t7YUFBRGRkVRUE9SUVEP
        Dw8ODg5eXVzKyMfT0tHh4ODKyMdSUVCbmZjIxsUgICBDQkJTUlJPT06cmppjYmJEQ0OqqKeJh4dBQEA6
        OjnKyMfKyMd7enlFREQ2NTXKyMdXVlY6OjlPTk7KyMdIR0enpaTHxcQZGRlEQ0Osqqmpp6ZAQD8oJydm
        ZWR8e3plZGR8enoeHR2VlJOZmJdSUVCfnZy1tLM4ODjKyMfT0tHi4eDKyMdSUVAFBQUGBQUaGhpLSkpk
        Y2IDAwMGBgYkIyNEQ0MFBQUDAwNgX146OjnKyMfKyMe4t7YCAgJ2dXS4trUdHBzDwcAkIyOxr65IR0cF
        BQUFBQUlJCRFREQFBQUEBARVVFMoKCcoKCi4trWko6I9PDwNDQ0GBgYHBwdLSkoFBQUEBARNTEvKyMfX
        1tXw8O/Rz8++vbyxsLCysbDGxMO9vLvKyci2tbSxsLDEwsK8urqxsLC2tbTNy8q7ubjRz87Rz87Rz861
        s7PKyMfGxMS9u7vRz86/vr3Ew8K9u7qxsLCysbDHxsW8u7qxsK+ysbDKyMe3trW1tLPRz87Rz861tLOz
        srGxsLCysLC9u7uxsLCysbDJx8bT0dD19fX/////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        //////////////////8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>